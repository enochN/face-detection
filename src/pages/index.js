import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useRef } from 'react';
import '@tensorflow/tfjs-backend-webgl';
// import * as faceMesh from '@mediapipe/face_mesh';


import * as tfjsWasm from '@tensorflow/tfjs-backend-wasm';
// import * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';

// tfjsWasm.setWasmPaths(
//     `https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${
//         tfjsWasm.version_wasm}/dist/`);

// import '@tensorflow-models/face-detection';
// import { createDetector } from '@tensorflow-models/face-detection';

const inter = Inter({ subsets: ['latin'] })

function setupCamera(videoRef) {
  navigator.mediaDevices.getUserMedia({
    video: {width: 640, height: 480, facingMode: 'user', frameRate: {
      ideal: 60
    }},
    audio: false,
  }).then(stream => {
    videoRef.current.srcObject = stream;
  });

}

export default function Home() {
  const videoRef = useRef();
  const canvasRef = useRef();
  const canvasRef2 = useRef();
  const canvasContextRef = useRef();

  useEffect( () => {
    if(videoRef.current){
      setupCamera(videoRef);



      videoRef.current.addEventListener("loadeddata", () => {

        // let detector = await faceLandmarksDetection.createDetector(faceLandmarksDetection.SupportedModels.MediaPipeFaceMesh, {
        //   runtime: 'mediapipe',
        //   refineLandmarks: true,
        //   maxFaces: 1,
        //   solutionPath: `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh@${
        //       '0.4.1633559619'}`
        // });

        setInterval(() => {
          const ellipseRadiusX = 150;
          const ellipseRadiusY = 225;
          const circleCenter = {
            x: 640 / 2,
            y: 480 / 2
          };
          const circleRadius = 150;
          const ctx2 = canvasRef2.current.getContext("2d");
              ctx2.drawImage(videoRef.current, 0, 0, 640, 480);
          const ctx = canvasRef.current.getContext("2d");

          ctx.fillStyle = 'rgba(255, 255, 255, 0.01)';
          ctx.fillRect(0, 0, 640, 480);

          // Draw the overlay
          ctx.fillStyle = 'rgba(255, 255, 255, 0)';
          ctx.fillRect(0, 0, 640, 480);
          ctx.save();

          // Draw the circle cutout
          ctx.beginPath();
          ctx.ellipse(circleCenter.x, circleCenter.y, ellipseRadiusX, ellipseRadiusY, 0, 0, 2 * Math.PI);
          ctx.fillStyle = 'rgba(255, 255, 255, 1)';
          ctx.globalCompositeOperation = 'destination-out';
          ctx.fill();

          ctx.restore();

          ctx.strokeStyle = "white";
          ctx.lineWidth = 6;
          ctx.stroke();

          // try {
          //   const faces = await detector.estimateFaces(videoRef.current, {flipHorizontal: false});
          //   console.log("faces", faces);
          // } catch (error) {
          //   detector.dispose();
          //   detector = null;
          //   alert(error);
          // }


        }, 100);
      });

    }
  }, [Boolean(videoRef.current)]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>src/pages/index.js</code>
          </p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{' '}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <video id="video" ref={videoRef} style={{display: 'none'}} autoPlay />
          <canvas width="640px" height="480px" id="canvas2" ref={canvasRef2} />
          <canvas style={{position: 'absolute', opacity: 1}} width="640px" height="480px" id="canvas" ref={canvasRef} />
        </div>

        <div className={styles.grid}>
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main>
    </>
  )
}
